{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\VITA\\\\School\\\\Android\\\\garbage-app-react-native\\\\screen\\\\WelcomeScreen.js\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nexport default function WelcomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"java\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocus = _useState4[0],\n      setFocus = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 200,\n      height: 100,\n      marginBottom: 20\n    },\n    source: require(\"../assets/garbabge.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: 200,\n      borderWidth: 1,\n      borderRadius: 10,\n      borderColor: \"#0000cd\",\n      shadowColor: \"#0000cd\",\n      shadowRadius: 5,\n      shadowOpacity: 0.6,\n      paddingHorizontal: 17\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Java\",\n    value: \"java\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"JavaScript\",\n    value: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), React.createElement(TextInput, {\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: function onBlur() {\n      setFocus(false);\n    },\n    style: isFocus ? styles.inputFocus : styles.input,\n    placeholder: \"Enter Password Connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('Garbage');\n    },\n    title: \"Submit\",\n    color: \"#0000cd\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8ff',\n    position: \"relative\",\n    paddingVertical: 100,\n    paddingHorizontal: 50\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    padding: 20,\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"#0000cd\",\n    shadowColor: \"#0000cd\",\n    shadowRadius: 5,\n    shadowOpacity: 0.6\n  },\n  inputFocus: {\n    height: 40,\n    margin: 12,\n    padding: 20,\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"#0000cd\",\n    shadowColor: \"#0000cd\",\n    shadowRadius: 5,\n    shadowOpacity: 0.6,\n    outlineWidth: 0\n  },\n  form: {\n    backgroundColor: '#fff',\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 20,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["D:/VITA/School/Android/garbage-app-react-native/screen/WelcomeScreen.js"],"names":["React","useEffect","useState","WelcomeScreen","navigation","selectedValue","setSelectedValue","isFocus","setFocus","styles","container","width","height","marginBottom","require","form","borderWidth","borderRadius","borderColor","shadowColor","shadowRadius","shadowOpacity","paddingHorizontal","itemValue","itemIndex","inputFocus","input","navigate","StyleSheet","create","flex","backgroundColor","position","paddingVertical","margin","padding","outlineWidth","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import {Picker,TextInput, Button, Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport React, { useEffect, useState } from 'react';\r\nexport default function WelcomeScreen({ navigation }){\r\n    const [selectedValue, setSelectedValue] = useState(\"java\");\r\n    const [isFocus, setFocus] = useState(false)\r\n    return(\r\n        <View style={styles.container}>\r\n            <View>\r\n                <Image style={{width: 200, height:100,marginBottom:20}} source={require('../assets/garbabge.png')}/>\r\n            </View>\r\n            <View style={styles.form}>           \r\n                {/* <TouchableOpacity activeOpacity={0.6} onPress={() => navigation.navigate('Garbage') } >\r\n                        <View>\r\n                            <Text>Garbage</Text>\r\n                        </View>\r\n                </TouchableOpacity> */}\r\n                <Picker\r\n                    selectedValue={selectedValue}\r\n                    style={{ \r\n                            height: 50, \r\n                            width: 200,\r\n                            borderWidth: 1,\r\n                            borderRadius:10,\r\n                            borderColor:\"#0000cd\",\r\n                            shadowColor:\"#0000cd\",\r\n                            shadowRadius:5,\r\n                            shadowOpacity:0.6,\r\n                            paddingHorizontal:17\r\n                    }}\r\n                    onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\r\n                >\r\n                    <Picker.Item label=\"Java\" value=\"java\" />\r\n                    <Picker.Item label=\"JavaScript\" value=\"js\" />\r\n                </Picker>\r\n                <TextInput\r\n                        onFocus={() => {\r\n                            setFocus(true)\r\n                        }}\r\n                        onBlur={() => {\r\n                            setFocus(false)\r\n                        }}\r\n                        style={(isFocus) ? (styles.inputFocus) : (styles.input) }\r\n                        // onChangeText={onChangeNumber}\r\n                        // value={number}\r\n                        placeholder=\"Enter Password Connect\"\r\n                        // keyboardType=\"numeric\"\r\n                        />\r\n\r\n               <Button\r\n                    onPress={() => navigation.navigate('Garbage')}\r\n                    title=\"Submit\"\r\n                    color=\"#0000cd\"\r\n                    accessibilityLabel=\"Learn more about this purple button\"\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#f8f8ff',\r\n      position:\"relative\",\r\n      paddingVertical:100,\r\n      paddingHorizontal:50\r\n    },\r\n    input:{\r\n        height: 40,\r\n        margin: 12,\r\n        padding: 20,\r\n        borderWidth: 1,\r\n        borderRadius:10,\r\n        borderColor:\"#0000cd\",\r\n        shadowColor:\"#0000cd\",\r\n        shadowRadius:5,\r\n        shadowOpacity:0.6\r\n    },\r\n    inputFocus:{\r\n        height: 40,\r\n        margin: 12,\r\n        padding: 20,\r\n        borderWidth: 1,\r\n        borderRadius:10,\r\n        borderColor:\"#0000cd\",\r\n        shadowColor:\"#0000cd\",\r\n        shadowRadius:5,\r\n        shadowOpacity:0.6,\r\n        outlineWidth: 0\r\n    },\r\n    form:{\r\n        backgroundColor: '#fff',\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        paddingVertical:20,\r\n        borderRadius:5\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}