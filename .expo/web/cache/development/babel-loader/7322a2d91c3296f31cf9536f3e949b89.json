{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _jsxFileName = \"D:\\\\VITA\\\\School\\\\Android\\\\garbage-app-react-native\\\\circleProgress\\\\CircleProgress.js\";\n\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar EMPTY_COLOR = 'rgba(159, 208, 255, 1)';\nvar PROGRESS_COLOR = '#adff2f';\nvar CircleBase = styled(Animated.View)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: \", \"px;\\n  height: \", \"px;\\n  border-radius: \", \"px;\\n  border-width: \", \"px;\\n\"])), function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n}, function (props) {\n  return props.size / 2;\n}, function (props) {\n  return props.size / 10;\n});\nvar EmptyCircle = styled(CircleBase)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  border-color: \", \";\\n  justify-content: center;\\n  align-items: center;\\n  transform: rotate(-45deg); \\n  background-color: #fff;\\n\"])), EMPTY_COLOR);\nvar TextCircle = styled.Text(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  transform: rotate(45deg); \\n  font-size:46px;\\n  font-weight: 600;\\n\"])));\nvar Indicator = styled(CircleBase)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  border-left-color: \", \";\\n  border-top-color: \", \";\\n  border-right-color: transparent;\\n  border-bottom-color: transparent; \"])), PROGRESS_COLOR, PROGRESS_COLOR);\nvar CoverIndicator = styled(CircleBase)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  border-left-color: \", \";\\n  border-top-color: \", \";\\n  border-right-color: transparent;\\n  border-bottom-color: transparent;\\n\"])), EMPTY_COLOR, EMPTY_COLOR);\nexport default function CircleProgress(props) {\n  var animatedProgress = useRef(new Animated.Value(0)).current;\n  var animateProgress = useRef(function (toValue) {\n    Animated.spring(animatedProgress, {\n      toValue: toValue,\n      useNativeDriver: true\n    }).start();\n  }).current;\n  useEffect(function () {\n    animateProgress(props.progress);\n  }, [animateProgress, props.progress]);\n  var firstIndicatorRotate = animatedProgress.interpolate({\n    inputRange: [0, 50],\n    outputRange: ['0deg', '180deg'],\n    extrapolate: 'clamp'\n  });\n  var secondIndicatorRotate = animatedProgress.interpolate({\n    inputRange: [0, 100],\n    outputRange: ['0deg', '360deg'],\n    extrapolate: 'clamp'\n  });\n  var secondIndictorVisibility = animatedProgress.interpolate({\n    inputRange: [0, 49, 50, 100],\n    outputRange: [0, 0, 1, 1],\n    extrapolate: 'clamp'\n  });\n  return React.createElement(EmptyCircle, {\n    size: props.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Indicator, {\n    style: {\n      transform: [{\n        rotate: firstIndicatorRotate\n      }]\n    },\n    size: props.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(CoverIndicator, {\n    size: props.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(TextCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, props.progress + \"%\"), React.createElement(Indicator, {\n    size: props.size,\n    style: {\n      transform: [{\n        rotate: secondIndicatorRotate\n      }],\n      opacity: secondIndictorVisibility\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/VITA/School/Android/garbage-app-react-native/circleProgress/CircleProgress.js"],"names":["React","useRef","useEffect","styled","EMPTY_COLOR","PROGRESS_COLOR","CircleBase","Animated","View","props","size","EmptyCircle","TextCircle","Text","Indicator","CoverIndicator","CircleProgress","animatedProgress","Value","current","animateProgress","toValue","spring","useNativeDriver","start","progress","firstIndicatorRotate","interpolate","inputRange","outputRange","extrapolate","secondIndicatorRotate","secondIndictorVisibility","transform","rotate","opacity"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport styled from 'styled-components/native';\r\nimport {Animated, Text} from 'react-native';\r\n\r\nconst EMPTY_COLOR = 'rgba(159, 208, 255, 1)';\r\nconst PROGRESS_COLOR = '#adff2f';\r\n\r\nconst CircleBase = styled(Animated.View)`\r\n  width: ${props => props.size}px;\r\n  height: ${props => props.size}px;\r\n  border-radius: ${props => props.size / 2}px;\r\n  border-width: ${props => props.size / 10}px;\r\n`;\r\n\r\nconst EmptyCircle = styled(CircleBase)`\r\n  border-color: ${EMPTY_COLOR};\r\n  justify-content: center;\r\n  align-items: center;\r\n  transform: rotate(-45deg); \r\n  background-color: #fff;\r\n`;\r\n\r\nconst TextCircle = styled.Text`\r\n  justify-content: center;\r\n  align-items: center;\r\n  transform: rotate(45deg); \r\n  font-size:46px;\r\n  font-weight: 600;\r\n`;\r\n\r\n\r\nconst Indicator = styled(CircleBase)`\r\n  position: absolute;\r\n  border-left-color: ${PROGRESS_COLOR};\r\n  border-top-color: ${PROGRESS_COLOR};\r\n  border-right-color: transparent;\r\n  border-bottom-color: transparent; `;\r\n\r\nconst CoverIndicator = styled(CircleBase)`\r\n  position: absolute;\r\n  border-left-color: ${EMPTY_COLOR};\r\n  border-top-color: ${EMPTY_COLOR};\r\n  border-right-color: transparent;\r\n  border-bottom-color: transparent;\r\n`;\r\n\r\nexport default function CircleProgress(props) {\r\n  const animatedProgress = useRef(new Animated.Value(0)).current;\r\n\r\n  const animateProgress = useRef(toValue => {\r\n    Animated.spring(animatedProgress, {\r\n      toValue,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }).current;\r\n\r\n  useEffect(() => {\r\n    animateProgress(props.progress);\r\n  }, [animateProgress, props.progress]);\r\n\r\n  const firstIndicatorRotate = animatedProgress.interpolate({\r\n    inputRange: [0, 50],\r\n    outputRange: ['0deg', '180deg'],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  const secondIndicatorRotate = animatedProgress.interpolate({\r\n    inputRange: [0, 100],\r\n    outputRange: ['0deg', '360deg'],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  const secondIndictorVisibility = animatedProgress.interpolate({\r\n    inputRange: [0, 49, 50, 100],\r\n    outputRange: [0, 0, 1, 1],\r\n    extrapolate: 'clamp',\r\n  });\r\n\r\n  return (\r\n    <EmptyCircle size={props.size}>\r\n      <Indicator\r\n        style={{transform: [{rotate: firstIndicatorRotate}]}}\r\n        size={props.size}\r\n      />\r\n      <CoverIndicator size={props.size} />\r\n      <TextCircle >{props.progress + \"%\"}</TextCircle>\r\n      <Indicator\r\n        size={props.size}\r\n        style={{\r\n          transform: [{rotate: secondIndicatorRotate}],\r\n          opacity: secondIndictorVisibility,\r\n        }}\r\n      />\r\n\r\n    </EmptyCircle>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}