{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\VITA\\\\School\\\\Android\\\\garbage-app-react-native\\\\screen\\\\GarbageScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Circle from \"../circleProgress/CircleProgress\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport firebase from \"firebase/app\";\nimport registerNotifications from \"../notification/RegisterNotification\";\nimport sendNotifications from \"../notification/SendNotification\";\nimport * as Notifications from 'expo-notifications';\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport default function GarbageScreen() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAjsg2_QADPDyj5AuHt_N3ox5lJJzQcpRk\",\n    authDomain: \"garbage-app-eed2c.firebaseapp.com\",\n    databaseURL: \"https://garbage-app-eed2c-default-rtdb.firebaseio.com\",\n    projectId: \"garbage-app-eed2c\",\n    storageBucket: \"garbage-app-eed2c.appspot.com\",\n    messagingSenderId: \"60234969577\",\n    appId: \"1:60234969577:web:13a61b29de05ea14191b78\",\n    measurementId: \"G-8S9QM8LB7R\"\n  };\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var _useState = useState({\n    organic: {\n      isEnable: true,\n      percent: 0\n    },\n    inorganic: {\n      isEnable: false,\n      percent: 0\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      percentTrash = _useState2[0],\n      setPercent = _useState2[1];\n\n  useEffect(function () {\n    var percentInorganicTrash = percentTrash.inorganic.percent;\n    var percentOrganicTrash = percentTrash.organic.percent;\n    var isPushed = true;\n    var token = \"ExponentPushToken[VjmgRjDhNt0AFxrc_3EUxI]\";\n\n    if (percentOrganicTrash == 100 && !(percentInorganicTrash == 100 && isPushed)) {\n      isPushed = false;\n      sendNotifications(token, \" ðŸ—‘ ðŸ—‘ Full Garbage In Organic\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\");\n    } else if (percentInorganicTrash == 100 && !(percentOrganicTrash == 100 && isPushed)) {\n      isPushed = false;\n      sendNotifications(token, \" ðŸ—‘ ðŸ—‘ Full Garbage In Inorganic\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\");\n    } else if (percentInorganicTrash == 100 && percentOrganicTrash == 100 && isPushed) {\n      isPushed = false;\n      sendNotifications(token, \" ðŸ—‘ ðŸ—‘ Garbage on both sides are full\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\");\n    }\n  });\n  useEffect(function () {\n    var trashRef = firebase.database().ref(\"trash/\");\n    trashRef.on(\"value\", function (data) {\n      var trash = data.val();\n      var percentInorganicGarbage = parseInt(trash.inorganic.percent);\n      var percentOrganicGarbage = parseInt(trash.organic.percent);\n      setPercent(_objectSpread(_objectSpread({}, percentTrash), {}, {\n        inorganic: _objectSpread(_objectSpread({}, percentTrash.inorganic), {}, {\n          percent: percentInorganicGarbage\n        }),\n        organic: _objectSpread(_objectSpread({}, percentTrash.organic), {}, {\n          percent: percentOrganicGarbage\n        })\n      }));\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/crown.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/settings.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, percentTrash.organic.isEnable ? React.createElement(Circle, {\n    size: 256,\n    progress: percentTrash.organic.percent,\n    type: \"organic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 46\n    }\n  }) : React.createElement(Circle, {\n    size: 256,\n    progress: percentTrash.inorganic.percent,\n    type: \"inorganic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 126\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonLoad,\n    activeOpacity: 0.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/refresh.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    accessibilityLabel: \"Learn more about this purple button\",\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Load Garbage\")), React.createElement(View, {\n    style: styles.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setPercent(_objectSpread(_objectSpread({}, percentTrash), {}, {\n        organic: _objectSpread(_objectSpread({}, percentTrash.organic), {}, {\n          isEnable: true\n        }),\n        inorganic: _objectSpread(_objectSpread({}, percentTrash.inorganic), {}, {\n          isEnable: false\n        })\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.categoryGarbage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/organic-food.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Organic\"))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setPercent(_objectSpread(_objectSpread({}, percentTrash), {}, {\n        inorganic: _objectSpread(_objectSpread({}, percentTrash.inorganic), {}, {\n          isEnable: true\n        }),\n        organic: _objectSpread(_objectSpread({}, percentTrash.organic), {}, {\n          isEnable: false\n        })\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.categoryGarbage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/online-shopping.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 10,\n      fontSize: 16,\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Inorganic\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#87cefa',\n    paddingVertical: 32,\n    paddingHorizontal: 12\n  },\n  headerSettings: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8\n  },\n  aQuarter: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: 256,\n    height: 256,\n    borderRadius: 200,\n    borderWidth: 10,\n    borderTopColor: \"rgba(0,0,0,0) \",\n    borderLeftColor: \"rgba(0,0,0,0) \",\n    borderBottomColor: \"rgba(0,0,0,0) \",\n    borderRightColor: \"green\",\n    transform: [{\n      rotate: '-45deg'\n    }]\n  },\n  coverChart: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: 60,\n    height: 60\n  },\n  percent: {\n    fontSize: 56,\n    fontWeight: '600'\n  },\n  buttonLoad: {\n    borderWidth: 1,\n    borderColor: \"#e6e6fa\",\n    backgroundColor: \"#e6e6fa\",\n    shadowColor: \"gray\",\n    shadowOpacity: 0.4,\n    shadowRadius: 10,\n    marginHorizontal: 50,\n    paddingHorizontal: 20,\n    marginTop: 20,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    paddingVertical: 8\n  },\n  category: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  categoryGarbage: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingVertical: 40,\n    width: 160,\n    borderRadius: 10,\n    shadowRadius: 20,\n    shadowColor: \"gray\",\n    shadowOpacity: 0.6\n  }\n});","map":{"version":3,"sources":["D:/VITA/School/Android/garbage-app-react-native/screen/GarbageScreen.js"],"names":["React","useEffect","useState","Circle","firebase","registerNotifications","sendNotifications","Notifications","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","GarbageScreen","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","organic","isEnable","percent","inorganic","percentTrash","setPercent","percentInorganicTrash","percentOrganicTrash","isPushed","token","trashRef","database","ref","on","data","trash","val","percentInorganicGarbage","parseInt","percentOrganicGarbage","styles","container","headerSettings","require","alignItems","buttonLoad","fontSize","category","categoryGarbage","marginTop","fontWeight","StyleSheet","create","flex","backgroundColor","paddingVertical","paddingHorizontal","display","flexDirection","justifyContent","aQuarter","position","top","left","width","height","borderRadius","borderWidth","borderTopColor","borderLeftColor","borderBottomColor","borderRightColor","transform","rotate","coverChart","borderColor","shadowColor","shadowOpacity","shadowRadius","marginHorizontal"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,MAAP;AACA,OAAO,oBAAP;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,qBAAP;AACA,OAAOC,iBAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AAIAA,aAAa,CAACC,sBAAd,CAAqC;AACnCC,EAAAA,kBAAkB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAa;AAC/BC,cAAAA,eAAe,EAAE,IADc;AAE/BC,cAAAA,eAAe,EAAE,IAFc;AAG/BC,cAAAA,cAAc,EAAE;AAHe,aAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADe,CAArC;AASA,eAAe,SAASC,aAAT,GAAyB;AAEtC,MAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,yCADa;AAErBC,IAAAA,UAAU,EAAE,mCAFS;AAGrBC,IAAAA,WAAW,EAAE,uDAHQ;AAIrBC,IAAAA,SAAS,EAAE,mBAJU;AAKrBC,IAAAA,aAAa,EAAE,+BALM;AAMrBC,IAAAA,iBAAiB,EAAE,aANE;AAOrBC,IAAAA,KAAK,EAAE,0CAPc;AAQrBC,IAAAA,aAAa,EAAE;AARM,GAAvB;;AAYA,MAAIlB,QAAQ,CAACmB,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC7BpB,IAAAA,QAAQ,CAACqB,aAAT,CAAuBX,cAAvB;AACF;;AAED,kBAAmCZ,QAAQ,CAAC;AAC1CwB,IAAAA,OAAO,EAAC;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KADkC;AAK1CC,IAAAA,SAAS,EAAC;AACRF,MAAAA,QAAQ,EAAE,KADF;AAERC,MAAAA,OAAO,EAAE;AAFD;AALgC,GAAD,CAA3C;AAAA;AAAA,MAAOE,YAAP;AAAA,MAAqBC,UAArB;;AAWA9B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM+B,qBAAqB,GAAGF,YAAY,CAACD,SAAb,CAAuBD,OAArD;AACA,QAAMK,mBAAmB,GAAGH,YAAY,CAACJ,OAAb,CAAqBE,OAAjD;AACA,QAAIM,QAAQ,GAAG,IAAf;AACA,QAAMC,KAAK,GAAG,2CAAd;;AACA,QAAGF,mBAAmB,IAAI,GAAvB,IAA8B,EAAED,qBAAqB,IAAI,GAAzB,IAAgCE,QAAlC,CAAjC,EAA6E;AAC3EA,MAAAA,QAAQ,GAAG,KAAX;AACA5B,MAAAA,iBAAiB,CAAC6B,KAAD,EAAO,gCAAP,EAAyC,yCAAzC,CAAjB;AACD,KAHD,MAIK,IAAGH,qBAAqB,IAAI,GAAzB,IAAgC,EAAEC,mBAAmB,IAAI,GAAvB,IAA8BC,QAAhC,CAAnC,EAA6E;AAChFA,MAAAA,QAAQ,GAAG,KAAX;AACA5B,MAAAA,iBAAiB,CAAC6B,KAAD,EAAO,kCAAP,EAA2C,yCAA3C,CAAjB;AACD,KAHI,MAIA,IAAGH,qBAAqB,IAAI,GAAzB,IAAgCC,mBAAmB,IAAI,GAAvD,IAA8DC,QAAjE,EAA0E;AAC7EA,MAAAA,QAAQ,GAAG,KAAX;AACA5B,MAAAA,iBAAiB,CAAC6B,KAAD,EAAO,uCAAP,EAAgD,yCAAhD,CAAjB;AACD;AACF,GAjBQ,CAAT;AAmBAlC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImC,QAAQ,GAAGhC,QAAQ,CAACiC,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAf;AAEAF,IAAAA,QAAQ,CAACG,EAAT,CAAY,OAAZ,EAAqB,UAASC,IAAT,EAAe;AAClC,UAAIC,KAAK,GAAGD,IAAI,CAACE,GAAL,EAAZ;AACA,UAAIC,uBAAuB,GAAGC,QAAQ,CAACH,KAAK,CAACZ,SAAN,CAAgBD,OAAjB,CAAtC;AACA,UAAIiB,qBAAqB,GAAGD,QAAQ,CAACH,KAAK,CAACf,OAAN,CAAcE,OAAf,CAApC;AACAG,MAAAA,UAAU,iCACLD,YADK;AAERD,QAAAA,SAAS,kCACJC,YAAY,CAACD,SADT;AAEPD,UAAAA,OAAO,EAAEe;AAFF,UAFD;AAMRjB,QAAAA,OAAO,kCACFI,YAAY,CAACJ,OADX;AAELE,UAAAA,OAAO,EAAEiB;AAFJ;AANC,SAAV;AAYD,KAhBD;AAiBD,GApBQ,EAoBP,EApBO,CAAT;AAsBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEC,OAAO,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEA,OAAO,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKpB,YAAY,CAACJ,OAAb,CAAqBC,QAAtB,GAAmC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,GAAd;AAAmB,IAAA,QAAQ,EAAEG,YAAY,CAACJ,OAAb,CAAqBE,OAAlD;AAA2D,IAAA,IAAI,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAAmH,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,GAAd;AAAmB,IAAA,QAAQ,EAAEE,YAAY,CAACD,SAAb,CAAuBD,OAApD;AAA6D,IAAA,IAAI,EAAC,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvH,CALF,EAUE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEkB,MAAM,CAACK,UAAhC;AAA4C,IAAA,aAAa,EAAE,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,OAAO,yBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,kBAAkB,EAAC,qCAAzB;AAA+D,IAAA,KAAK,EAAE;AAACG,MAAAA,QAAQ,EAAC;AAAV,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAVF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAE,mBAAM;AACnDtB,MAAAA,UAAU,iCACLD,YADK;AAERJ,QAAAA,OAAO,kCACFI,YAAY,CAACJ,OADX;AAELC,UAAAA,QAAQ,EAAE;AAFL,UAFC;AAMRE,QAAAA,SAAS,kCACJC,YAAY,CAACD,SADT;AAEPF,UAAAA,QAAQ,EAAE;AAFH;AAND,SAAV;AAWD,KAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACQ,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,OAAO,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAC,EAAX;AAAcH,MAAAA,QAAQ,EAAC,EAAvB;AAA0BI,MAAAA,UAAU,EAAC;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAbF,CADF,EAmBE,oBAAC,gBAAD;AAAkB,IAAA,aAAa,EAAE,GAAjC;AAAsC,IAAA,OAAO,EAAE,mBAAM;AACnDzB,MAAAA,UAAU,iCACLD,YADK;AAERD,QAAAA,SAAS,kCACJC,YAAY,CAACD,SADT;AAEPF,UAAAA,QAAQ,EAAE;AAFH,UAFD;AAMRD,QAAAA,OAAO,kCACFI,YAAY,CAACJ,OADX;AAELC,UAAAA,QAAQ,EAAE;AAFL;AANC,SAAV;AAWD,KAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACQ,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,OAAO,iCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAC,EAAX;AAAcH,MAAAA,QAAQ,EAAC,EAAvB;AAA0BI,MAAAA,UAAU,EAAC;AAArC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAbF,CAnBF,CAdF,CADF;AAwDD;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,eAAe,EAAC,EAHP;AAITC,IAAAA,iBAAiB,EAAC;AAJT,GADoB;AAO/Bd,EAAAA,cAAc,EAAC;AACbe,IAAAA,OAAO,EAAC,MADK;AAEbC,IAAAA,aAAa,EAAC,KAFD;AAGbC,IAAAA,cAAc,EAAC,eAHF;AAIbH,IAAAA,iBAAiB,EAAC,EAJL;AAKbD,IAAAA,eAAe,EAAC;AALH,GAPgB;AAc/BK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,QAAQ,EAAC,UADJ;AAELC,IAAAA,GAAG,EAAC,CAFC;AAGLC,IAAAA,IAAI,EAAC,CAHA;AAILC,IAAAA,KAAK,EAAC,GAJD;AAKLC,IAAAA,MAAM,EAAC,GALF;AAMLC,IAAAA,YAAY,EAAC,GANR;AAOLC,IAAAA,WAAW,EAAC,EAPP;AAQLC,IAAAA,cAAc,EAAC,gBARV;AASLC,IAAAA,eAAe,EAAC,gBATX;AAULC,IAAAA,iBAAiB,EAAC,gBAVb;AAWLC,IAAAA,gBAAgB,EAAC,OAXZ;AAYLC,IAAAA,SAAS,EAAE,CAAC;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAD;AAZN,GAdsB;AA4B/BC,EAAAA,UAAU,EAAC;AACTb,IAAAA,QAAQ,EAAC,UADA;AAETC,IAAAA,GAAG,EAAC,CAFK;AAGTC,IAAAA,IAAI,EAAC,CAHI;AAITC,IAAAA,KAAK,EAAC,EAJG;AAKTC,IAAAA,MAAM,EAAC;AALE,GA5BoB;AAmC/B3C,EAAAA,OAAO,EAAC;AACNwB,IAAAA,QAAQ,EAAC,EADH;AAENI,IAAAA,UAAU,EAAC;AAFL,GAnCuB;AAuC/BL,EAAAA,UAAU,EAAC;AACTsB,IAAAA,WAAW,EAAC,CADH;AAETQ,IAAAA,WAAW,EAAC,SAFH;AAGTrB,IAAAA,eAAe,EAAC,SAHP;AAITsB,IAAAA,WAAW,EAAC,MAJH;AAKTC,IAAAA,aAAa,EAAC,GALL;AAMTC,IAAAA,YAAY,EAAC,EANJ;AAOTC,IAAAA,gBAAgB,EAAC,EAPR;AAQTvB,IAAAA,iBAAiB,EAAC,EART;AASTP,IAAAA,SAAS,EAAC,EATD;AAUTiB,IAAAA,YAAY,EAAC,EAVJ;AAWTR,IAAAA,aAAa,EAAC,KAXL;AAYTC,IAAAA,cAAc,EAAC,cAZN;AAaTf,IAAAA,UAAU,EAAC,QAbF;AAcTW,IAAAA,eAAe,EAAC;AAdP,GAvCoB;AAwD/BR,EAAAA,QAAQ,EAAC;AACPW,IAAAA,aAAa,EAAC,KADP;AAEPC,IAAAA,cAAc,EAAC,cAFR;AAGPf,IAAAA,UAAU,EAAC,QAHJ;AAIPK,IAAAA,SAAS,EAAC;AAJH,GAxDsB;AA8D/BD,EAAAA,eAAe,EAAC;AACdU,IAAAA,aAAa,EAAC,QADA;AAEdd,IAAAA,UAAU,EAAC,QAFG;AAGdU,IAAAA,eAAe,EAAC,MAHF;AAIdC,IAAAA,eAAe,EAAC,EAJF;AAKdS,IAAAA,KAAK,EAAC,GALQ;AAMdE,IAAAA,YAAY,EAAC,EANC;AAOdY,IAAAA,YAAY,EAAC,EAPC;AAQdF,IAAAA,WAAW,EAAC,MARE;AASdC,IAAAA,aAAa,EAAC;AATA;AA9De,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport Circle from  '../circleProgress/CircleProgress';\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport firebase from \"firebase/app\";\r\nimport registerNotifications from  \"../notification/RegisterNotification\"\r\nimport sendNotifications from \"../notification/SendNotification\";\r\nimport * as Notifications from 'expo-notifications';\r\n\r\n\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: true,\r\n  }),\r\n});\r\n\r\n\r\nexport default function GarbageScreen() {\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyAjsg2_QADPDyj5AuHt_N3ox5lJJzQcpRk\",\r\n    authDomain: \"garbage-app-eed2c.firebaseapp.com\",\r\n    databaseURL: \"https://garbage-app-eed2c-default-rtdb.firebaseio.com\",\r\n    projectId: \"garbage-app-eed2c\",\r\n    storageBucket: \"garbage-app-eed2c.appspot.com\",\r\n    messagingSenderId: \"60234969577\",\r\n    appId: \"1:60234969577:web:13a61b29de05ea14191b78\",\r\n    measurementId: \"G-8S9QM8LB7R\"\r\n  };\r\n\r\n\r\n  if (firebase.apps.length === 0) {\r\n     firebase.initializeApp(firebaseConfig);\r\n  }\r\n\r\n  const [percentTrash, setPercent] = useState({\r\n    organic:{\r\n      isEnable: true,\r\n      percent: 0\r\n    },\r\n    inorganic:{\r\n      isEnable: false,\r\n      percent: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const percentInorganicTrash = percentTrash.inorganic.percent;\r\n    const percentOrganicTrash = percentTrash.organic.percent;\r\n    let isPushed = true;\r\n    const token = \"ExponentPushToken[VjmgRjDhNt0AFxrc_3EUxI]\";\r\n    if(percentOrganicTrash == 100 && !(percentInorganicTrash == 100 && isPushed)){\r\n      isPushed = false;\r\n      sendNotifications(token,\" ðŸ—‘ ðŸ—‘ Full Garbage In Organic\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\")\r\n    }\r\n    else if(percentInorganicTrash == 100 && !(percentOrganicTrash == 100 && isPushed)){\r\n      isPushed = false;\r\n      sendNotifications(token,\" ðŸ—‘ ðŸ—‘ Full Garbage In Inorganic\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\")\r\n    }\r\n    else if(percentInorganicTrash == 100 && percentOrganicTrash == 100 && isPushed){\r\n      isPushed = false;\r\n      sendNotifications(token,\" ðŸ—‘ ðŸ—‘ Garbage on both sides are full\", \"ðŸ˜€\tðŸ˜€ Let's go take out the trash ðŸ˜€\tðŸ˜€\")\r\n    }\r\n  })\r\n \r\n  useEffect(() => {\r\n    var trashRef = firebase.database().ref(\"trash/\");\r\n\r\n    trashRef.on(\"value\", function(data) {\r\n      var trash = data.val();\r\n      var percentInorganicGarbage = parseInt(trash.inorganic.percent)\r\n      var percentOrganicGarbage = parseInt(trash.organic.percent)\r\n      setPercent({\r\n        ...percentTrash,\r\n        inorganic:{\r\n          ...percentTrash.inorganic,\r\n          percent: percentInorganicGarbage\r\n        },\r\n        organic:{\r\n          ...percentTrash.organic,\r\n          percent: percentOrganicGarbage\r\n        }\r\n      })\r\n      \r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerSettings}>\r\n        <Image source={require('../assets/crown.png')}/>\r\n        <Image source={require('../assets/settings.png')} />\r\n      </View>\r\n      <View style={{alignItems:\"center\"}}>\r\n        {\r\n          (percentTrash.organic.isEnable) ? (<Circle size={256} progress={percentTrash.organic.percent} type=\"organic\"/>) : (<Circle size={256} progress={percentTrash.inorganic.percent} type=\"inorganic\"/>)\r\n        }\r\n      </View>\r\n      <TouchableOpacity style={styles.buttonLoad} activeOpacity={0.6}>\r\n          <Image source={require('../assets/refresh.png')}/>\r\n          <Text accessibilityLabel=\"Learn more about this purple button\" style={{fontSize:18}}>Load Garbage</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.category}>\r\n        <TouchableOpacity activeOpacity={0.8} onPress={() => {\r\n          setPercent({\r\n            ...percentTrash,\r\n            organic:{\r\n              ...percentTrash.organic,\r\n              isEnable: true\r\n            },\r\n            inorganic:{\r\n              ...percentTrash.inorganic,\r\n              isEnable: false\r\n            }\r\n          })\r\n        }}>\r\n          <View style={styles.categoryGarbage}>\r\n              <Image source={require(\"../assets/organic-food.png\")}/>\r\n              <Text style={{marginTop:10,fontSize:16,fontWeight:'600'}}>Organic</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity activeOpacity={0.8} onPress={() => {\r\n          setPercent({\r\n            ...percentTrash,\r\n            inorganic:{\r\n              ...percentTrash.inorganic,\r\n              isEnable: true\r\n            },\r\n            organic:{\r\n              ...percentTrash.organic,\r\n              isEnable: false\r\n            }\r\n          })\r\n        }}>\r\n          <View style={styles.categoryGarbage}>\r\n              <Image source={require(\"../assets/online-shopping.png\")}/>\r\n              <Text style={{marginTop:10,fontSize:16,fontWeight:'600'}}>Inorganic</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#87cefa',\r\n    paddingVertical:32,\r\n    paddingHorizontal:12\r\n  },\r\n  headerSettings:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n    paddingHorizontal:16,\r\n    paddingVertical:8\r\n  },\r\n  aQuarter:{ \r\n      position:\"absolute\",\r\n      top:0,\r\n      left:0,\r\n      width:256,\r\n      height:256,\r\n      borderRadius:200,\r\n      borderWidth:10,\r\n      borderTopColor:\"rgba(0,0,0,0) \",\r\n      borderLeftColor:\"rgba(0,0,0,0) \",\r\n      borderBottomColor:\"rgba(0,0,0,0) \",\r\n      borderRightColor:\"green\",\r\n      transform: [{rotate: '-45deg'}]\r\n  },\r\n  coverChart:{\r\n    position:\"absolute\",\r\n    top:0,\r\n    left:0,\r\n    width:60,\r\n    height:60\r\n  },\r\n  percent:{\r\n    fontSize:56,\r\n    fontWeight:'600'\r\n  },\r\n  buttonLoad:{\r\n    borderWidth:1,\r\n    borderColor:\"#e6e6fa\",\r\n    backgroundColor:\"#e6e6fa\",\r\n    shadowColor:\"gray\",\r\n    shadowOpacity:0.4,\r\n    shadowRadius:10,\r\n    marginHorizontal:50,\r\n    paddingHorizontal:20,\r\n    marginTop:20,\r\n    borderRadius:20,\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-evenly\",\r\n    alignItems:\"center\",\r\n    paddingVertical:8\r\n\r\n  },\r\n  category:{\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-around\",\r\n    alignItems:\"center\",\r\n    marginTop:50\r\n  },\r\n  categoryGarbage:{\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n    backgroundColor:\"#fff\",\r\n    paddingVertical:40,\r\n    width:160,\r\n    borderRadius:10,\r\n    shadowRadius:20,\r\n    shadowColor:\"gray\",\r\n    shadowOpacity:0.6\r\n  },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}