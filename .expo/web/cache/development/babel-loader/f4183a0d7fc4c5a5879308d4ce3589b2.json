{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://exp.host\";\n\nvar SendNotification = function SendNotification(token, title, body) {\n  var message;\n  return _regeneratorRuntime.async(function SendNotification$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          message = {\n            to: token,\n            sound: \"default\",\n            title: title,\n            body: body\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(\"/--/api/v2/push/send\", message).then().catch(function (err) {\n            console.log(err);\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default SendNotification;","map":{"version":3,"sources":["D:/VITA/School/Android/garbage-app-react-native/notification/SendNotification.js"],"names":["axios","defaults","baseURL","SendNotification","token","title","body","message","to","sound","post","then","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,kBAAzB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,KAAP,EAAaC,KAAb,EAAmBC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,OADe,GACL;AACZC,YAAAA,EAAE,EAAEJ,KADQ;AAEZK,YAAAA,KAAK,EAAC,SAFM;AAGZJ,YAAAA,KAAK,EAALA,KAHY;AAIZC,YAAAA,IAAI,EAAJA;AAJY,WADK;AAAA;AAAA,2CAQfN,KAAK,CAACU,IAAN,CAAW,sBAAX,EAAkCH,OAAlC,EAA2CI,IAA3C,GAAkDC,KAAlD,CAAwD,UAACC,GAAD,EAAS;AAACC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,WAAnF,CARe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAWA,eAAeV,gBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://exp.host\";\r\n\r\nconst SendNotification = async (token,title,body) => {\r\n    const message = {\r\n        to: token,\r\n        sound:\"default\",\r\n        title,\r\n        body\r\n    }\r\n\r\n    await axios.post(\"/--/api/v2/push/send\",message).then().catch((err) => {console.log(err)});\r\n}\r\n\r\nexport default SendNotification;"]},"metadata":{},"sourceType":"module"}